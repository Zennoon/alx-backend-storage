#!/usr/bin/env python3
"""
Contains:
    Classes
    =======
    Cache - Wrapper to enable caching using redis
"""
import redis
import uuid
from typing import Union


class Cache:
    """Provides caching using redis"""
    def __init__(self) -> None:
        """Initializes a newly created instance"""
        self._redis = redis.Redis()
        self._redis.flushdb()

    def store(self, data: Union[str, bytes, int, float]) -> str:
        """
        Stores data to the client with a random key
        generated by uuid

        Args:
            data (str | bytes | int | float) : The data to store

        Returns:
            (str): The randomly generated key used to store the data
        """
        key = uuid.uuid4()
        self._redis.set(str(key), data)
        return (str(key))
